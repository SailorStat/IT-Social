{"version":3,"sources":["hoc/withLoginRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Message/Message.module.css","components/MessageList/MessageList.module.css","components/AddresseeList/AddresseeList.module.css","components/Addressee/Addressee.module.css","components/Message/Message.jsx","components/MessageList/MessageList.jsx","components/MessageList/MessageListContainer.jsx","components/Addressee/Addressee.jsx","components/AddresseeList/AddresseeList.jsx","components/AddresseeList/AddresseeListContainer.jsx","components/Dialogs/Dialogs.jsx","redux/selectors/dialogs-selector.js","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isLoggedIn","getIsLoggedIn","mapDispatchToProps","withLoginRedirect","Component","connect","props","to","module","exports","Message","fromCurrentUser","className","s","message","outgoing","message__date","date","message__data","loginUser","message__author","fullName","message__text","userPhoto","Avatar","avatar","userid","checkedDialog","MessageList","message__container","messagesData","map","el","messageId","MessageListContainer","dialogsPage","dialogs","getCurrentUserId","Addressee","userId","onClick","setCheckedDialog","dialogsitem__title","activeClassName","checked","exact","AddresseeList","dialogs__inner","Object","keys","users","AddresseeListContainer","getUsers","Dialogs","messages__inner","TextCreator","placeholderText","getText","setText","setDialogValueText","addBlock","addMessage","getDialogValueText","dialogValueText","compose","getCurrentUserPhoto","loginPage","name"],"mappings":"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","file":"static/js/3.8750bdb8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport { getIsLoggedIn } from '../redux/selectors/user-selector';\r\n\r\nconst mapStateToPropsForRedirect = state => {\r\n  return {\r\n    isLoggedIn: getIsLoggedIn(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst withLoginRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    if (props.isLoggedIn) return <Component {...props}/>\r\n    return <Redirect to={\"/login\"}/>\r\n  }\r\n\r\n  return connect(mapStateToPropsForRedirect, mapDispatchToProps)(RedirectComponent)\r\n}\r\n  \r\n\r\nexport default withLoginRedirect","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__etPsl\",\"messages__inner\":\"Dialogs_messages__inner__1-dbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__TUbjs\",\"outgoing\":\"Message_outgoing__3e6a5\",\"userPhoto\":\"Message_userPhoto__2IJ7h\",\"message__data\":\"Message_message__data__F1XXE\",\"message__author\":\"Message_message__author__1Qj2E\",\"message__text\":\"Message_message__text__2SPNz\",\"message__date\":\"Message_message__date__BILWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message__container\":\"MessageList_message__container__TjAMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__inner\":\"AddresseeList_dialogs__inner__1-orJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsitem__title\":\"Addressee_dialogsitem__title__3Onpr\",\"checked\":\"Addressee_checked__1qkC7\"};","import s from \"./Message.module.css\"\r\nimport Avatar from \"../../loc/Avatar/Avatar\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n  if (props.fromCurrentUser) {\r\n    return (\r\n      <div className={s.message + \" \" + s.outgoing}>\r\n        <div className={s.message__date + \" \" + s.outgoing}>{props.date}</div>\r\n        <div className={s.message__data + \" \" + s.outgoing}>\r\n          <NavLink to={\"/profile/\" + props.loginUser} className={s.message__author + \" \" + s.outgoing}>{props.fullName}</NavLink>\r\n          <div className={s.message__text + \" \" + s.outgoing}>{props.message}</div>\r\n        </div>\r\n        <div className={s.userPhoto + \" \" + s.outgoing}>\r\n          <Avatar avatar={props.userPhoto} userid={props.loginUser}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className={s.message}>\r\n      <div className={s.userPhoto}>\r\n          <Avatar avatar={props.userPhoto} userid={props.checkedDialog}/>\r\n      </div>\r\n      <div className={s.message__data}>\r\n        <NavLink to={\"/profile/\" + props.checkedDialog} className={s.message__author + \" \" + s.outgoing}>{props.fullName}</NavLink>\r\n        <div className={s.message__text}>{props.message}</div>\r\n      </div>\r\n      <div className={s.message__date}>\r\n        {props.date}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message","import Message from '../Message/Message';\r\nimport s from \"./MessageList.module.css\"\r\n\r\nconst MessageList = (props) => {\r\n  return (\r\n    <div className={s.message__container}>\r\n      {props.messagesData.map(el => <Message key={\"Message\" + el.messageId}\r\n                                             userPhoto={el.userPhoto}\r\n                                             fullName={el.fullName} \r\n                                             fromCurrentUser={el.fromCurrentUser}\r\n                                             message={el.message}\r\n                                             date={el.date}\r\n                                             loginUser={props.loginUser}\r\n                                             checkedDialog={props.checkedDialog}/>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageList","import { connect } from \"react-redux\";\r\nimport { getCurrentUserId } from \"../../redux/selectors/user-selector\";\r\nimport MessageList from \"./MessageList\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    messagesData: state.dialogsPage.dialogs[state.dialogsPage.checkedDialog]?.messagesData || [],\r\n    checkedDialog: state.dialogsPage.checkedDialog,\r\n    loginUser: getCurrentUserId(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nconst MessageListContainer = connect(mapStateToProps, mapDispatchToProps)(MessageList)\r\n\r\nexport default MessageListContainer","import s from \"./Addressee.module.css\"\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Addressee = (props) => {\r\n  return (\r\n    <NavLink to={\"/dialogs/\" + props.userId} onClick={props.setCheckedDialog} userid={props.userId} className={s.dialogsitem__title} activeClassName={s.checked} exact>\r\n      {props.fullName}\r\n    </NavLink>\r\n  )\r\n}\r\n\r\nexport default Addressee","import s from \"./AddresseeList.module.css\"\r\nimport Addressee from \"../Addressee/Addressee\";\r\n\r\nconst AddresseeList = (props) => {\r\n  return (\r\n    <div className={s.dialogs__inner}>\r\n      {Object.keys(props.users).map(el => (\r\n        <Addressee key={\"Addressee\" + el} fullName={props.users[el][\"fullName\"]} userId={el} setCheckedDialog={props.setCheckedDialog}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddresseeList","import { connect } from \"react-redux\";\r\nimport AddresseeList from \"./AddresseeList\";\r\nimport { setCheckedDialog } from \"../../redux/redux-store\";\r\nimport { getUsers } from \"./../../redux/selectors/user-selector\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { setCheckedDialog }\r\n\r\nconst AddresseeListContainer = connect(mapStateToProps, mapDispatchToProps)(AddresseeList)\r\n\r\nexport default AddresseeListContainer","import s from \"./Dialogs.module.css\"\r\nimport TextCreator from \"../../loc/TextCreator/TextCreator\";\r\nimport MessageListContainer from \"../MessageList/MessageListContainer\";\r\nimport AddresseeListContainer from \"../AddresseeList/AddresseeListContainer\";\r\n\r\nconst Dialogs = (props) => {\r\n  return (\r\n    <div className={\"content__wrapper \" + s.dialogs}>\r\n      <AddresseeListContainer />\r\n      \r\n      <div className={s.messages__inner}>\r\n        <MessageListContainer />\r\n        <TextCreator placeholderText=\"Enter your message..\"\r\n                     getText={props.getText}\r\n                     setText={props.setDialogValueText}\r\n                     addBlock={props.addMessage}\r\n                     userPhoto={props.userPhoto}\r\n                     fullName={props.fullName}\r\n                     userid={props.userId}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","export const getDialogValueText = (state) => {\r\n  return state.dialogsPage.dialogValueText\r\n}","import Dialogs from \"./Dialogs\";\r\nimport { addMessage, setDialogValueText } from \"../../redux/redux-store\";\r\nimport { connect } from \"react-redux\";\r\nimport withLoginRedirect from \"../../hoc/withLoginRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getCurrentUserId, getCurrentUserPhoto } from \"../../redux/selectors/user-selector\";\r\nimport { getDialogValueText } from \"./../../redux/selectors/dialogs-selector\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getText: getDialogValueText(state),\r\n    userPhoto: getCurrentUserPhoto(state),\r\n    userId: getCurrentUserId(state),\r\n    fullName: state.loginPage.loginUser.name\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { setDialogValueText, addMessage}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withLoginRedirect\r\n)(Dialogs)"],"sourceRoot":""}